{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///angular-file-upload.min.js","webpack:///webpack/bootstrap 9bea877ed3a77e853152?ce28","webpack:///./src/index.js?9552","webpack:///./src/config.json?1c25","webpack:///./src/values/options.js?b00e","webpack:///./src/services/FileUploader.js?148d","webpack:///./src/services/FileLikeObject.js?b90b","webpack:///./src/services/FileItem.js?e529","webpack:///./src/services/FileDirective.js?4dd3","webpack:///./src/services/FileSelect.js?5a11","webpack:///./src/services/Pipeline.js?322f","webpack:///./src/services/FileDrop.js?e446","webpack:///./src/services/FileOver.js?26c9","webpack:///./src/directives/FileSelect.js?8405","webpack:///./src/directives/FileDrop.js?82da","webpack:///./src/directives/FileOver.js?6161"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_config","_config2","_options","_options2","_FileUploader","_FileUploader2","_FileLikeObject","_FileLikeObject2","_FileItem","_FileItem2","_FileDirective","_FileDirective2","_FileSelect","_FileSelect2","_Pipeline","_Pipeline2","_FileDrop","_FileDrop2","_FileOver","_FileOver2","_FileSelect3","_FileSelect4","_FileDrop3","_FileDrop4","_FileOver3","_FileOver4","angular","CONFIG","name","value","options","serviceFileUploader","serviceFileLikeObject","serviceFileItem","serviceFileDirective","serviceFileSelect","serviceFileDrop","serviceFileOver","servicePipeline","directive","directiveFileSelect","directiveFileDrop","directiveFileOver","run","FileUploader","FileLikeObject","FileItem","FileDirective","FileSelect","FileDrop","FileOver","Pipeline","Object","defineProperty","url","alias","headers","queue","progress","autoUpload","removeAfterUpload","method","filters","formData","queueLimit","Number","MAX_VALUE","withCredentials","disableMultipart","_classCallCheck","instance","Constructor","TypeError","__identity","fileUploaderOptions","$rootScope","$http","$window","$timeout","File","FormData","settings","copy","extend","isUploading","_nextIndex","_directives","select","drop","over","unshift","fn","_queueLimitFilter","_folderFilter","prototype","addToQueue","files","_this","incomingQueue","isArrayLikeObject","Array","slice","arrayOfFilters","_getFilters","count","length","addedFileItems","next","something","shift","isUndefined","done","fileLikeObject","isFile","isAnotherFileImplementation","pipes","_convertFiltersToPipes","pipeline","onThrown","err","originalFilter","pipe","_err$args","_slicedToArray","args","_onWhenAddingFileFailed","onSuccessful","fileItem","push","_onAfterAddingFile","exec","_onAfterAddingAll","_getTotalProgress","_render","uploadAll","removeFromQueue","index","getIndexOfItem","item","cancel","splice","_destroy","clearQueue","remove","uploadItem","transport","isHTML5","_prepareToUploading","_onBeforeUploadItem","isCancel","cancelItem","_this2","prop","abort","dummy","undefined","onNextTick","_onCancelItem","apply","concat","_onCompleteItem","items","getNotUploadedItems","filter","forEach","upload","cancelAll","constructor","isFileLikeObject","isNumber","indexOf","isUploaded","getReadyItems","isReady","sort","item1","item2","destroy","_this3","key","object","onAfterAddingAll","fileItems","onAfterAddingFile","onWhenAddingFileFailed","onBeforeUploadItem","onProgressItem","onProgressAll","onSuccessItem","response","status","onErrorItem","onCancelItem","onCompleteItem","onCompleteAll","notUploaded","uploaded","ratio","current","Math","round","isArray","names","match","_this4","map","bind","isAsync","$$phase","$apply","size","type","_isSuccessCode","_transformResponse","headersGetter","_headersGetter","defaults","transformResponse","transformFn","_parseHeaders","val","i","parsed","split","line","trim","toLowerCase","parsedHeaders","_xhrTransport","sendable","_this5","xhr","_xhr","XMLHttpRequest","_file","append","file","onprogress","event","lengthComputable","total","_onProgressItem","onload","getAllResponseHeaders","gist","onerror","_onErrorItem","onabort","open","setRequestHeader","send","_iframeTransport","_this6","form","element","iframe","Date","now","input","_input","_form","replaceWith","element_","action","target","enctype","encoding","html","contentDocument","body","innerHTML","e","_onSuccessItem","unbind","after","submit","_onBeforeUpload","_onProgress","_onSuccess","_onError","_onCancel","_onComplete","nextItem","isDefined","isObject","inherit","source","create","super_","sliceIterator","arr","_arr","_n","_d","_e","_s","_i","Symbol","iterator","_angular","$inject","fileOrInput","isInput","isElement","fakePathOrObject","postfix","isString","_createFromFakePath","path","lastModifiedDate","lastIndexOf","_createFromObject","$compile","uploader","some","isSuccess","isError","_replaceNode","message","code","onBeforeUpload","onProgress","onSuccess","onError","onCancel","onComplete","clone","scope","css","_saveLinks","events","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","enumerable","writable","configurable","setPrototypeOf","__proto__","extendedOptions","$destroy","change","removeAttr","getOptions","getFilters","isEmptyAfterSelection","attr","onChange","_toConsumableArray","arr2","from","$q","arguments","Error","deferred","defer","onFulfilled","onRejected","promise","then","isDone","Boolean","_len","_key","dragover","dragleave","onDrop","transfer","_getTransfer","_preventAndStop","_removeOverClass","onDragOver","_haveFiles","types","dropEffect","_addOverClass","onDragLeave","currentTarget","dataTransfer","originalEvent","preventDefault","stopPropagation","contains","addOverClass","removeOverClass","overClass","addClass","getOverClass","removeClass","$parse","link","attributes","$eval"],"mappings":"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","file":"angular-file-upload.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angular-file-upload\"] = factory();\n\telse\n\t\troot[\"angular-file-upload\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angular-file-upload\"] = factory();\n\telse\n\t\troot[\"angular-file-upload\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tvar _options = __webpack_require__(2);\n\t\n\tvar _options2 = _interopRequireDefault(_options);\n\t\n\tvar _FileUploader = __webpack_require__(3);\n\t\n\tvar _FileUploader2 = _interopRequireDefault(_FileUploader);\n\t\n\tvar _FileLikeObject = __webpack_require__(4);\n\t\n\tvar _FileLikeObject2 = _interopRequireDefault(_FileLikeObject);\n\t\n\tvar _FileItem = __webpack_require__(5);\n\t\n\tvar _FileItem2 = _interopRequireDefault(_FileItem);\n\t\n\tvar _FileDirective = __webpack_require__(6);\n\t\n\tvar _FileDirective2 = _interopRequireDefault(_FileDirective);\n\t\n\tvar _FileSelect = __webpack_require__(7);\n\t\n\tvar _FileSelect2 = _interopRequireDefault(_FileSelect);\n\t\n\tvar _Pipeline = __webpack_require__(8);\n\t\n\tvar _Pipeline2 = _interopRequireDefault(_Pipeline);\n\t\n\tvar _FileDrop = __webpack_require__(9);\n\t\n\tvar _FileDrop2 = _interopRequireDefault(_FileDrop);\n\t\n\tvar _FileOver = __webpack_require__(10);\n\t\n\tvar _FileOver2 = _interopRequireDefault(_FileOver);\n\t\n\tvar _FileSelect3 = __webpack_require__(11);\n\t\n\tvar _FileSelect4 = _interopRequireDefault(_FileSelect3);\n\t\n\tvar _FileDrop3 = __webpack_require__(12);\n\t\n\tvar _FileDrop4 = _interopRequireDefault(_FileDrop3);\n\t\n\tvar _FileOver3 = __webpack_require__(13);\n\t\n\tvar _FileOver4 = _interopRequireDefault(_FileOver3);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tangular.module(_config2.default.name, []).value('fileUploaderOptions', _options2.default).factory('FileUploader', _FileUploader2.default).factory('FileLikeObject', _FileLikeObject2.default).factory('FileItem', _FileItem2.default).factory('FileDirective', _FileDirective2.default).factory('FileSelect', _FileSelect2.default).factory('FileDrop', _FileDrop2.default).factory('FileOver', _FileOver2.default).factory('Pipeline', _Pipeline2.default).directive('nvFileSelect', _FileSelect4.default).directive('nvFileDrop', _FileDrop4.default).directive('nvFileOver', _FileOver4.default).run(['FileUploader', 'FileLikeObject', 'FileItem', 'FileDirective', 'FileSelect', 'FileDrop', 'FileOver', 'Pipeline', function (FileUploader, FileLikeObject, FileItem, FileDirective, FileSelect, FileDrop, FileOver, Pipeline) {\n\t    // only for compatibility\n\t    FileUploader.FileLikeObject = FileLikeObject;\n\t    FileUploader.FileItem = FileItem;\n\t    FileUploader.FileDirective = FileDirective;\n\t    FileUploader.FileSelect = FileSelect;\n\t    FileUploader.FileDrop = FileDrop;\n\t    FileUploader.FileOver = FileOver;\n\t    FileUploader.Pipeline = Pipeline;\n\t}]);\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"name\":\"angularFileUpload\"}\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = {\n\t    url: '/',\n\t    alias: 'file',\n\t    headers: {},\n\t    queue: [],\n\t    progress: 0,\n\t    autoUpload: false,\n\t    removeAfterUpload: false,\n\t    method: 'POST',\n\t    filters: [],\n\t    formData: [],\n\t    queueLimit: Number.MAX_VALUE,\n\t    withCredentials: false,\n\t    disableMultipart: false\n\t};\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\texports.default = __identity;\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar _angular = angular,\n\t    bind = _angular.bind,\n\t    copy = _angular.copy,\n\t    extend = _angular.extend,\n\t    forEach = _angular.forEach,\n\t    isObject = _angular.isObject,\n\t    isNumber = _angular.isNumber,\n\t    isDefined = _angular.isDefined,\n\t    isArray = _angular.isArray,\n\t    isUndefined = _angular.isUndefined,\n\t    element = _angular.element;\n\tfunction __identity(fileUploaderOptions, $rootScope, $http, $window, $timeout, FileLikeObject, FileItem, Pipeline) {\n\t    var File = $window.File,\n\t        FormData = $window.FormData;\n\t\n\t    var FileUploader = function () {\n\t        /**********************\n\t         * PUBLIC\n\t         **********************/\n\t        /**\n\t         * Creates an instance of FileUploader\n\t         * @param {Object} [options]\n\t         * @constructor\n\t         */\n\t        function FileUploader(options) {\n\t            _classCallCheck(this, FileUploader);\n\t\n\t            var settings = copy(fileUploaderOptions);\n\t\n\t            extend(this, settings, options, {\n\t                isUploading: false,\n\t                _nextIndex: 0,\n\t                _directives: { select: [], drop: [], over: [] }\n\t            });\n\t\n\t            // add default filters\n\t            this.filters.unshift({ name: 'queueLimit', fn: this._queueLimitFilter });\n\t            this.filters.unshift({ name: 'folder', fn: this._folderFilter });\n\t        }\n\t        /**\n\t         * Adds items to the queue\n\t         * @param {File|HTMLInputElement|Object|FileList|Array<Object>} files\n\t         * @param {Object} [options]\n\t         * @param {Array<Function>|String} filters\n\t         */\n\t\n\t\n\t        FileUploader.prototype.addToQueue = function addToQueue(files, options, filters) {\n\t            var _this = this;\n\t\n\t            var incomingQueue = this.isArrayLikeObject(files) ? Array.prototype.slice.call(files) : [files];\n\t            var arrayOfFilters = this._getFilters(filters);\n\t            var count = this.queue.length;\n\t            var addedFileItems = [];\n\t\n\t            var next = function next() {\n\t                var something = incomingQueue.shift();\n\t\n\t                if (isUndefined(something)) {\n\t                    return done();\n\t                }\n\t\n\t                var fileLikeObject = _this.isFile(something) || _this.isAnotherFileImplementation(something) ? something : new FileLikeObject(something);\n\t                var pipes = _this._convertFiltersToPipes(arrayOfFilters);\n\t                var pipeline = new Pipeline(pipes);\n\t                var onThrown = function onThrown(err) {\n\t                    var originalFilter = err.pipe.originalFilter;\n\t\n\t                    var _err$args = _slicedToArray(err.args, 2),\n\t                        fileLikeObject = _err$args[0],\n\t                        options = _err$args[1];\n\t\n\t                    _this._onWhenAddingFileFailed(fileLikeObject, originalFilter, options);\n\t                    next();\n\t                };\n\t                var onSuccessful = function onSuccessful(fileLikeObject, options) {\n\t                    var fileItem = new FileItem(_this, fileLikeObject, options);\n\t                    addedFileItems.push(fileItem);\n\t                    _this.queue.push(fileItem);\n\t                    _this._onAfterAddingFile(fileItem);\n\t                    next();\n\t                };\n\t                pipeline.onThrown = onThrown;\n\t                pipeline.onSuccessful = onSuccessful;\n\t                pipeline.exec(fileLikeObject, options);\n\t            };\n\t\n\t            var done = function done() {\n\t                if (_this.queue.length !== count) {\n\t                    _this._onAfterAddingAll(addedFileItems);\n\t                    _this.progress = _this._getTotalProgress();\n\t                }\n\t\n\t                _this._render();\n\t                if (_this.autoUpload) _this.uploadAll();\n\t            };\n\t\n\t            next();\n\t        };\n\t        /**\n\t         * Remove items from the queue. Remove last: index = -1\n\t         * @param {FileItem|Number} value\n\t         */\n\t\n\t\n\t        FileUploader.prototype.removeFromQueue = function removeFromQueue(value) {\n\t            var index = this.getIndexOfItem(value);\n\t            var item = this.queue[index];\n\t            if (item.isUploading) item.cancel();\n\t            this.queue.splice(index, 1);\n\t            item._destroy();\n\t            this.progress = this._getTotalProgress();\n\t        };\n\t        /**\n\t         * Clears the queue\n\t         */\n\t\n\t\n\t        FileUploader.prototype.clearQueue = function clearQueue() {\n\t            while (this.queue.length) {\n\t                this.queue[0].remove();\n\t            }\n\t            this.progress = 0;\n\t        };\n\t        /**\n\t         * Uploads a item from the queue\n\t         * @param {FileItem|Number} value\n\t         */\n\t\n\t\n\t        FileUploader.prototype.uploadItem = function uploadItem(value) {\n\t            var index = this.getIndexOfItem(value);\n\t            var item = this.queue[index];\n\t            var transport = this.isHTML5 ? '_xhrTransport' : '_iframeTransport';\n\t\n\t            item._prepareToUploading();\n\t            if (this.isUploading) return;\n\t\n\t            this._onBeforeUploadItem(item);\n\t            if (item.isCancel) return;\n\t\n\t            item.isUploading = true;\n\t            this.isUploading = true;\n\t            this[transport](item);\n\t            this._render();\n\t        };\n\t        /**\n\t         * Cancels uploading of item from the queue\n\t         * @param {FileItem|Number} value\n\t         */\n\t\n\t\n\t        FileUploader.prototype.cancelItem = function cancelItem(value) {\n\t            var _this2 = this;\n\t\n\t            var index = this.getIndexOfItem(value);\n\t            var item = this.queue[index];\n\t            var prop = this.isHTML5 ? '_xhr' : '_form';\n\t            if (!item) return;\n\t            item.isCancel = true;\n\t            if (item.isUploading) {\n\t                // It will call this._onCancelItem() & this._onCompleteItem() asynchronously\n\t                item[prop].abort();\n\t            } else {\n\t                var dummy = [undefined, 0, {}];\n\t                var onNextTick = function onNextTick() {\n\t                    _this2._onCancelItem.apply(_this2, [item].concat(dummy));\n\t                    _this2._onCompleteItem.apply(_this2, [item].concat(dummy));\n\t                };\n\t                $timeout(onNextTick); // Trigger callbacks asynchronously (setImmediate emulation)\n\t            }\n\t        };\n\t        /**\n\t         * Uploads all not uploaded items of queue\n\t         */\n\t\n\t\n\t        FileUploader.prototype.uploadAll = function uploadAll() {\n\t            var items = this.getNotUploadedItems().filter(function (item) {\n\t                return !item.isUploading;\n\t            });\n\t            if (!items.length) return;\n\t\n\t            forEach(items, function (item) {\n\t                return item._prepareToUploading();\n\t            });\n\t            items[0].upload();\n\t        };\n\t        /**\n\t         * Cancels all uploads\n\t         */\n\t\n\t\n\t        FileUploader.prototype.cancelAll = function cancelAll() {\n\t            var items = this.getNotUploadedItems();\n\t            forEach(items, function (item) {\n\t                return item.cancel();\n\t            });\n\t        };\n\t        /**\n\t         * Returns \"true\" if value an instance of File\n\t         * @param {*} value\n\t         * @returns {Boolean}\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype.isFile = function isFile(value) {\n\t            return this.constructor.isFile(value);\n\t        };\n\t        /**\n\t         * Returns \"true\" if value is an instance of another File class, event if it is not the window.File class.\n\t         * For example, cordova uses another File definition.\n\t         * @param {*} value\n\t         * @returns {Boolean}\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.isAnotherFileImplementation = function isAnotherFileImplementation(value) {\n\t            return this.constructor.isAnotherFileImplementation(value);\n\t        };\n\t        /**\n\t         * Returns \"true\" if value an instance of FileLikeObject\n\t         * @param {*} value\n\t         * @returns {Boolean}\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype.isFileLikeObject = function isFileLikeObject(value) {\n\t            return this.constructor.isFileLikeObject(value);\n\t        };\n\t        /**\n\t         * Returns \"true\" if value is array like object\n\t         * @param {*} value\n\t         * @returns {Boolean}\n\t         */\n\t\n\t\n\t        FileUploader.prototype.isArrayLikeObject = function isArrayLikeObject(value) {\n\t            return this.constructor.isArrayLikeObject(value);\n\t        };\n\t        /**\n\t         * Returns a index of item from the queue\n\t         * @param {Item|Number} value\n\t         * @returns {Number}\n\t         */\n\t\n\t\n\t        FileUploader.prototype.getIndexOfItem = function getIndexOfItem(value) {\n\t            return isNumber(value) ? value : this.queue.indexOf(value);\n\t        };\n\t        /**\n\t         * Returns not uploaded items\n\t         * @returns {Array}\n\t         */\n\t\n\t\n\t        FileUploader.prototype.getNotUploadedItems = function getNotUploadedItems() {\n\t            return this.queue.filter(function (item) {\n\t                return !item.isUploaded;\n\t            });\n\t        };\n\t        /**\n\t         * Returns items ready for upload\n\t         * @returns {Array}\n\t         */\n\t\n\t\n\t        FileUploader.prototype.getReadyItems = function getReadyItems() {\n\t            return this.queue.filter(function (item) {\n\t                return item.isReady && !item.isUploading;\n\t            }).sort(function (item1, item2) {\n\t                return item1.index - item2.index;\n\t            });\n\t        };\n\t        /**\n\t         * Destroys instance of FileUploader\n\t         */\n\t\n\t\n\t        FileUploader.prototype.destroy = function destroy() {\n\t            var _this3 = this;\n\t\n\t            forEach(this._directives, function (key) {\n\t                forEach(_this3._directives[key], function (object) {\n\t                    object.destroy();\n\t                });\n\t            });\n\t        };\n\t        /**\n\t         * Callback\n\t         * @param {Array} fileItems\n\t         */\n\t\n\t\n\t        FileUploader.prototype.onAfterAddingAll = function onAfterAddingAll(fileItems) {};\n\t        /**\n\t         * Callback\n\t         * @param {FileItem} fileItem\n\t         */\n\t\n\t\n\t        FileUploader.prototype.onAfterAddingFile = function onAfterAddingFile(fileItem) {};\n\t        /**\n\t         * Callback\n\t         * @param {File|Object} item\n\t         * @param {Object} filter\n\t         * @param {Object} options\n\t         */\n\t\n\t\n\t        FileUploader.prototype.onWhenAddingFileFailed = function onWhenAddingFileFailed(item, filter, options) {};\n\t        /**\n\t         * Callback\n\t         * @param {FileItem} fileItem\n\t         */\n\t\n\t\n\t        FileUploader.prototype.onBeforeUploadItem = function onBeforeUploadItem(fileItem) {};\n\t        /**\n\t         * Callback\n\t         * @param {FileItem} fileItem\n\t         * @param {Number} progress\n\t         */\n\t\n\t\n\t        FileUploader.prototype.onProgressItem = function onProgressItem(fileItem, progress) {};\n\t        /**\n\t         * Callback\n\t         * @param {Number} progress\n\t         */\n\t\n\t\n\t        FileUploader.prototype.onProgressAll = function onProgressAll(progress) {};\n\t        /**\n\t         * Callback\n\t         * @param {FileItem} item\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         */\n\t\n\t\n\t        FileUploader.prototype.onSuccessItem = function onSuccessItem(item, response, status, headers) {};\n\t        /**\n\t         * Callback\n\t         * @param {FileItem} item\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         */\n\t\n\t\n\t        FileUploader.prototype.onErrorItem = function onErrorItem(item, response, status, headers) {};\n\t        /**\n\t         * Callback\n\t         * @param {FileItem} item\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         */\n\t\n\t\n\t        FileUploader.prototype.onCancelItem = function onCancelItem(item, response, status, headers) {};\n\t        /**\n\t         * Callback\n\t         * @param {FileItem} item\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         */\n\t\n\t\n\t        FileUploader.prototype.onCompleteItem = function onCompleteItem(item, response, status, headers) {};\n\t        /**\n\t         * Callback\n\t         */\n\t\n\t\n\t        FileUploader.prototype.onCompleteAll = function onCompleteAll() {};\n\t        /**********************\n\t         * PRIVATE\n\t         **********************/\n\t        /**\n\t         * Returns the total progress\n\t         * @param {Number} [value]\n\t         * @returns {Number}\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._getTotalProgress = function _getTotalProgress(value) {\n\t            if (this.removeAfterUpload) return value || 0;\n\t\n\t            var notUploaded = this.getNotUploadedItems().length;\n\t            var uploaded = notUploaded ? this.queue.length - notUploaded : this.queue.length;\n\t            var ratio = 100 / this.queue.length;\n\t            var current = (value || 0) * ratio / 100;\n\t\n\t            return Math.round(uploaded * ratio + current);\n\t        };\n\t        /**\n\t         * Returns array of filters\n\t         * @param {Array<Function>|String} filters\n\t         * @returns {Array<Function>}\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._getFilters = function _getFilters(filters) {\n\t            if (!filters) return this.filters;\n\t            if (isArray(filters)) return filters;\n\t            var names = filters.match(/[^\\s,]+/g);\n\t            return this.filters.filter(function (filter) {\n\t                return names.indexOf(filter.name) !== -1;\n\t            });\n\t        };\n\t        /**\n\t        * @param {Array<Function>} filters\n\t        * @returns {Array<Function>}\n\t        * @private\n\t        */\n\t\n\t\n\t        FileUploader.prototype._convertFiltersToPipes = function _convertFiltersToPipes(filters) {\n\t            var _this4 = this;\n\t\n\t            return filters.map(function (filter) {\n\t                var fn = bind(_this4, filter.fn);\n\t                fn.isAsync = filter.fn.length === 3;\n\t                fn.originalFilter = filter;\n\t                return fn;\n\t            });\n\t        };\n\t        /**\n\t         * Updates html\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._render = function _render() {\n\t            if (!$rootScope.$$phase) $rootScope.$apply();\n\t        };\n\t        /**\n\t         * Returns \"true\" if item is a file (not folder)\n\t         * @param {File|FileLikeObject} item\n\t         * @returns {Boolean}\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._folderFilter = function _folderFilter(item) {\n\t            return !!(item.size || item.type);\n\t        };\n\t        /**\n\t         * Returns \"true\" if the limit has not been reached\n\t         * @returns {Boolean}\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._queueLimitFilter = function _queueLimitFilter() {\n\t            return this.queue.length < this.queueLimit;\n\t        };\n\t        /**\n\t         * Checks whether upload successful\n\t         * @param {Number} status\n\t         * @returns {Boolean}\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._isSuccessCode = function _isSuccessCode(status) {\n\t            return status >= 200 && status < 300 || status === 304;\n\t        };\n\t        /**\n\t         * Transforms the server response\n\t         * @param {*} response\n\t         * @param {Object} headers\n\t         * @returns {*}\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._transformResponse = function _transformResponse(response, headers) {\n\t            var headersGetter = this._headersGetter(headers);\n\t            forEach($http.defaults.transformResponse, function (transformFn) {\n\t                response = transformFn(response, headersGetter);\n\t            });\n\t            return response;\n\t        };\n\t        /**\n\t         * Parsed response headers\n\t         * @param headers\n\t         * @returns {Object}\n\t         * @see https://github.com/angular/angular.js/blob/master/src/ng/http.js\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._parseHeaders = function _parseHeaders(headers) {\n\t            var parsed = {},\n\t                key,\n\t                val,\n\t                i;\n\t\n\t            if (!headers) return parsed;\n\t\n\t            forEach(headers.split('\\n'), function (line) {\n\t                i = line.indexOf(':');\n\t                key = line.slice(0, i).trim().toLowerCase();\n\t                val = line.slice(i + 1).trim();\n\t\n\t                if (key) {\n\t                    parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n\t                }\n\t            });\n\t\n\t            return parsed;\n\t        };\n\t        /**\n\t         * Returns function that returns headers\n\t         * @param {Object} parsedHeaders\n\t         * @returns {Function}\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._headersGetter = function _headersGetter(parsedHeaders) {\n\t            return function (name) {\n\t                if (name) {\n\t                    return parsedHeaders[name.toLowerCase()] || null;\n\t                }\n\t                return parsedHeaders;\n\t            };\n\t        };\n\t        /**\n\t         * The XMLHttpRequest transport\n\t         * @param {FileItem} item\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._xhrTransport = function _xhrTransport(item) {\n\t            var _this5 = this;\n\t\n\t            var xhr = item._xhr = new XMLHttpRequest();\n\t            var sendable;\n\t\n\t            if (!item.disableMultipart) {\n\t                sendable = new FormData();\n\t                forEach(item.formData, function (obj) {\n\t                    forEach(obj, function (value, key) {\n\t                        sendable.append(key, value);\n\t                    });\n\t                });\n\t\n\t                sendable.append(item.alias, item._file, item.file.name);\n\t            } else {\n\t                sendable = item._file;\n\t            }\n\t\n\t            if (typeof item._file.size != 'number') {\n\t                throw new TypeError('The file specified is no longer valid');\n\t            }\n\t\n\t            xhr.upload.onprogress = function (event) {\n\t                var progress = Math.round(event.lengthComputable ? event.loaded * 100 / event.total : 0);\n\t                _this5._onProgressItem(item, progress);\n\t            };\n\t\n\t            xhr.onload = function () {\n\t                var headers = _this5._parseHeaders(xhr.getAllResponseHeaders());\n\t                var response = _this5._transformResponse(xhr.response, headers);\n\t                var gist = _this5._isSuccessCode(xhr.status) ? 'Success' : 'Error';\n\t                var method = '_on' + gist + 'Item';\n\t                _this5[method](item, response, xhr.status, headers);\n\t                _this5._onCompleteItem(item, response, xhr.status, headers);\n\t            };\n\t\n\t            xhr.onerror = function () {\n\t                var headers = _this5._parseHeaders(xhr.getAllResponseHeaders());\n\t                var response = _this5._transformResponse(xhr.response, headers);\n\t                _this5._onErrorItem(item, response, xhr.status, headers);\n\t                _this5._onCompleteItem(item, response, xhr.status, headers);\n\t            };\n\t\n\t            xhr.onabort = function () {\n\t                var headers = _this5._parseHeaders(xhr.getAllResponseHeaders());\n\t                var response = _this5._transformResponse(xhr.response, headers);\n\t                _this5._onCancelItem(item, response, xhr.status, headers);\n\t                _this5._onCompleteItem(item, response, xhr.status, headers);\n\t            };\n\t\n\t            xhr.open(item.method, item.url, true);\n\t\n\t            xhr.withCredentials = item.withCredentials;\n\t\n\t            forEach(item.headers, function (value, name) {\n\t                xhr.setRequestHeader(name, value);\n\t            });\n\t\n\t            xhr.send(sendable);\n\t        };\n\t        /**\n\t         * The IFrame transport\n\t         * @param {FileItem} item\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._iframeTransport = function _iframeTransport(item) {\n\t            var _this6 = this;\n\t\n\t            var form = element('<form style=\"display: none;\" />');\n\t            var iframe = element('<iframe name=\"iframeTransport' + Date.now() + '\">');\n\t            var input = item._input;\n\t\n\t            if (item._form) item._form.replaceWith(input); // remove old form\n\t            item._form = form; // save link to new form\n\t\n\t            input.prop('name', item.alias);\n\t\n\t            forEach(item.formData, function (obj) {\n\t                forEach(obj, function (value, key) {\n\t                    var element_ = element('<input type=\"hidden\" name=\"' + key + '\" />');\n\t                    element_.val(value);\n\t                    form.append(element_);\n\t                });\n\t            });\n\t\n\t            form.prop({\n\t                action: item.url,\n\t                method: 'POST',\n\t                target: iframe.prop('name'),\n\t                enctype: 'multipart/form-data',\n\t                encoding: 'multipart/form-data' // old IE\n\t            });\n\t\n\t            iframe.bind('load', function () {\n\t                var html = '';\n\t                var status = 200;\n\t\n\t                try {\n\t                    // Fix for legacy IE browsers that loads internal error page\n\t                    // when failed WS response received. In consequence iframe\n\t                    // content access denied error is thrown becouse trying to\n\t                    // access cross domain page. When such thing occurs notifying\n\t                    // with empty response object. See more info at:\n\t                    // http://stackoverflow.com/questions/151362/access-is-denied-error-on-accessing-iframe-document-object\n\t                    // Note that if non standard 4xx or 5xx error code returned\n\t                    // from WS then response content can be accessed without error\n\t                    // but 'XHR' status becomes 200. In order to avoid confusion\n\t                    // returning response via same 'success' event handler.\n\t\n\t                    // fixed angular.contents() for iframes\n\t                    html = iframe[0].contentDocument.body.innerHTML;\n\t                } catch (e) {\n\t                    // in case we run into the access-is-denied error or we have another error on the server side\n\t                    // (intentional 500,40... errors), we at least say 'something went wrong' -> 500\n\t                    status = 500;\n\t                }\n\t\n\t                var xhr = { response: html, status: status, dummy: true };\n\t                var headers = {};\n\t                var response = _this6._transformResponse(xhr.response, headers);\n\t\n\t                _this6._onSuccessItem(item, response, xhr.status, headers);\n\t                _this6._onCompleteItem(item, response, xhr.status, headers);\n\t            });\n\t\n\t            form.abort = function () {\n\t                var xhr = { status: 0, dummy: true };\n\t                var headers = {};\n\t                var response;\n\t\n\t                iframe.unbind('load').prop('src', 'javascript:false;');\n\t                form.replaceWith(input);\n\t\n\t                _this6._onCancelItem(item, response, xhr.status, headers);\n\t                _this6._onCompleteItem(item, response, xhr.status, headers);\n\t            };\n\t\n\t            input.after(form);\n\t            form.append(input).append(iframe);\n\t\n\t            form[0].submit();\n\t        };\n\t        /**\n\t         * Inner callback\n\t         * @param {File|Object} item\n\t         * @param {Object} filter\n\t         * @param {Object} options\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._onWhenAddingFileFailed = function _onWhenAddingFileFailed(item, filter, options) {\n\t            this.onWhenAddingFileFailed(item, filter, options);\n\t        };\n\t        /**\n\t         * Inner callback\n\t         * @param {FileItem} item\n\t         */\n\t\n\t\n\t        FileUploader.prototype._onAfterAddingFile = function _onAfterAddingFile(item) {\n\t            this.onAfterAddingFile(item);\n\t        };\n\t        /**\n\t         * Inner callback\n\t         * @param {Array<FileItem>} items\n\t         */\n\t\n\t\n\t        FileUploader.prototype._onAfterAddingAll = function _onAfterAddingAll(items) {\n\t            this.onAfterAddingAll(items);\n\t        };\n\t        /**\n\t         *  Inner callback\n\t         * @param {FileItem} item\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._onBeforeUploadItem = function _onBeforeUploadItem(item) {\n\t            item._onBeforeUpload();\n\t            this.onBeforeUploadItem(item);\n\t        };\n\t        /**\n\t         * Inner callback\n\t         * @param {FileItem} item\n\t         * @param {Number} progress\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._onProgressItem = function _onProgressItem(item, progress) {\n\t            var total = this._getTotalProgress(progress);\n\t            this.progress = total;\n\t            item._onProgress(progress);\n\t            this.onProgressItem(item, progress);\n\t            this.onProgressAll(total);\n\t            this._render();\n\t        };\n\t        /**\n\t         * Inner callback\n\t         * @param {FileItem} item\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._onSuccessItem = function _onSuccessItem(item, response, status, headers) {\n\t            item._onSuccess(response, status, headers);\n\t            this.onSuccessItem(item, response, status, headers);\n\t        };\n\t        /**\n\t         * Inner callback\n\t         * @param {FileItem} item\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._onErrorItem = function _onErrorItem(item, response, status, headers) {\n\t            item._onError(response, status, headers);\n\t            this.onErrorItem(item, response, status, headers);\n\t        };\n\t        /**\n\t         * Inner callback\n\t         * @param {FileItem} item\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._onCancelItem = function _onCancelItem(item, response, status, headers) {\n\t            item._onCancel(response, status, headers);\n\t            this.onCancelItem(item, response, status, headers);\n\t        };\n\t        /**\n\t         * Inner callback\n\t         * @param {FileItem} item\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._onCompleteItem = function _onCompleteItem(item, response, status, headers) {\n\t            item._onComplete(response, status, headers);\n\t            this.onCompleteItem(item, response, status, headers);\n\t\n\t            var nextItem = this.getReadyItems()[0];\n\t            this.isUploading = false;\n\t\n\t            if (isDefined(nextItem)) {\n\t                nextItem.upload();\n\t                return;\n\t            }\n\t\n\t            this.onCompleteAll();\n\t            this.progress = this._getTotalProgress();\n\t            this._render();\n\t        };\n\t        /**********************\n\t         * STATIC\n\t         **********************/\n\t        /**\n\t         * Returns \"true\" if value an instance of File\n\t         * @param {*} value\n\t         * @returns {Boolean}\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.isFile = function isFile(value) {\n\t            return File && value instanceof File || value.constructor && value.constructor.name == 'File';\n\t        };\n\t        /**\n\t         * Returns \"true\" if value an instance of another File class, event if it is not the window.File class.\n\t         * For example, cordova uses another File definition.\n\t         * @param {*} value\n\t         * @returns {Boolean}\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.isAnotherFileImplementation = function isAnotherFileImplementation(value) {\n\t            return value.constructor && value.constructor.name == 'File';\n\t        };\n\t        /**\n\t         * Returns \"true\" if value an instance of FileLikeObject\n\t         * @param {*} value\n\t         * @returns {Boolean}\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.isFileLikeObject = function isFileLikeObject(value) {\n\t            return value instanceof FileLikeObject;\n\t        };\n\t        /**\n\t         * Returns \"true\" if value is array like object\n\t         * @param {*} value\n\t         * @returns {Boolean}\n\t         */\n\t\n\t\n\t        FileUploader.isArrayLikeObject = function isArrayLikeObject(value) {\n\t            return isObject(value) && 'length' in value;\n\t        };\n\t        /**\n\t         * Inherits a target (Class_1) by a source (Class_2)\n\t         * @param {Function} target\n\t         * @param {Function} source\n\t         */\n\t\n\t\n\t        FileUploader.inherit = function inherit(target, source) {\n\t            target.prototype = Object.create(source.prototype);\n\t            target.prototype.constructor = target;\n\t            target.super_ = source;\n\t        };\n\t\n\t        return FileUploader;\n\t    }();\n\t\n\t    /**********************\n\t     * PUBLIC\n\t     **********************/\n\t    /**\n\t     * Checks a support the html5 uploader\n\t     * @returns {Boolean}\n\t     * @readonly\n\t     */\n\t\n\t\n\t    FileUploader.prototype.isHTML5 = !!(File && FormData);\n\t    /**********************\n\t     * STATIC\n\t     **********************/\n\t    /**\n\t     * @borrows FileUploader.prototype.isHTML5\n\t     */\n\t    FileUploader.isHTML5 = FileUploader.prototype.isHTML5;\n\t\n\t    return FileUploader;\n\t}\n\t\n\t__identity.$inject = ['fileUploaderOptions', '$rootScope', '$http', '$window', '$timeout', 'FileLikeObject', 'FileItem', 'Pipeline'];\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = __identity;\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar _angular = angular,\n\t    copy = _angular.copy,\n\t    isElement = _angular.isElement,\n\t    isString = _angular.isString;\n\tfunction __identity() {\n\t\n\t    return function () {\n\t        /**\n\t         * Creates an instance of FileLikeObject\n\t         * @param {File|HTMLInputElement|Object} fileOrInput\n\t         * @constructor\n\t         */\n\t        function FileLikeObject(fileOrInput) {\n\t            _classCallCheck(this, FileLikeObject);\n\t\n\t            var isInput = isElement(fileOrInput);\n\t            var fakePathOrObject = isInput ? fileOrInput.value : fileOrInput;\n\t            var postfix = isString(fakePathOrObject) ? 'FakePath' : 'Object';\n\t            var method = '_createFrom' + postfix;\n\t            this[method](fakePathOrObject);\n\t        }\n\t        /**\n\t         * Creates file like object from fake path string\n\t         * @param {String} path\n\t         * @private\n\t         */\n\t\n\t\n\t        FileLikeObject.prototype._createFromFakePath = function _createFromFakePath(path) {\n\t            this.lastModifiedDate = null;\n\t            this.size = null;\n\t            this.type = 'like/' + path.slice(path.lastIndexOf('.') + 1).toLowerCase();\n\t            this.name = path.slice(path.lastIndexOf('/') + path.lastIndexOf('\\\\') + 2);\n\t        };\n\t        /**\n\t         * Creates file like object from object\n\t         * @param {File|FileLikeObject} object\n\t         * @private\n\t         */\n\t\n\t\n\t        FileLikeObject.prototype._createFromObject = function _createFromObject(object) {\n\t            this.lastModifiedDate = copy(object.lastModifiedDate);\n\t            this.size = object.size;\n\t            this.type = object.type;\n\t            this.name = object.name;\n\t        };\n\t\n\t        return FileLikeObject;\n\t    }();\n\t}\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = __identity;\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar _angular = angular,\n\t    copy = _angular.copy,\n\t    extend = _angular.extend,\n\t    element = _angular.element,\n\t    isElement = _angular.isElement;\n\tfunction __identity($compile, FileLikeObject) {\n\t\n\t    return function () {\n\t        /**\n\t         * Creates an instance of FileItem\n\t         * @param {FileUploader} uploader\n\t         * @param {File|HTMLInputElement|Object} some\n\t         * @param {Object} options\n\t         * @constructor\n\t         */\n\t        function FileItem(uploader, some, options) {\n\t            _classCallCheck(this, FileItem);\n\t\n\t            var isInput = isElement(some);\n\t            var input = isInput ? element(some) : null;\n\t            var file = !isInput ? some : null;\n\t\n\t            extend(this, {\n\t                url: uploader.url,\n\t                alias: uploader.alias,\n\t                headers: copy(uploader.headers),\n\t                formData: copy(uploader.formData),\n\t                removeAfterUpload: uploader.removeAfterUpload,\n\t                withCredentials: uploader.withCredentials,\n\t                disableMultipart: uploader.disableMultipart,\n\t                method: uploader.method\n\t            }, options, {\n\t                uploader: uploader,\n\t                file: new FileLikeObject(some),\n\t                isReady: false,\n\t                isUploading: false,\n\t                isUploaded: false,\n\t                isSuccess: false,\n\t                isCancel: false,\n\t                isError: false,\n\t                progress: 0,\n\t                index: null,\n\t                _file: file,\n\t                _input: input\n\t            });\n\t\n\t            if (input) this._replaceNode(input);\n\t        }\n\t        /**********************\n\t         * PUBLIC\n\t         **********************/\n\t        /**\n\t         * Uploads a FileItem\n\t         */\n\t\n\t\n\t        FileItem.prototype.upload = function upload() {\n\t            try {\n\t                this.uploader.uploadItem(this);\n\t            } catch (e) {\n\t                var message = e.name + ':' + e.message;\n\t                this.uploader._onCompleteItem(this, message, e.code, []);\n\t                this.uploader._onErrorItem(this, message, e.code, []);\n\t            }\n\t        };\n\t        /**\n\t         * Cancels uploading of FileItem\n\t         */\n\t\n\t\n\t        FileItem.prototype.cancel = function cancel() {\n\t            this.uploader.cancelItem(this);\n\t        };\n\t        /**\n\t         * Removes a FileItem\n\t         */\n\t\n\t\n\t        FileItem.prototype.remove = function remove() {\n\t            this.uploader.removeFromQueue(this);\n\t        };\n\t        /**\n\t         * Callback\n\t         * @private\n\t         */\n\t\n\t\n\t        FileItem.prototype.onBeforeUpload = function onBeforeUpload() {};\n\t        /**\n\t         * Callback\n\t         * @param {Number} progress\n\t         * @private\n\t         */\n\t\n\t\n\t        FileItem.prototype.onProgress = function onProgress(progress) {};\n\t        /**\n\t         * Callback\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         */\n\t\n\t\n\t        FileItem.prototype.onSuccess = function onSuccess(response, status, headers) {};\n\t        /**\n\t         * Callback\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         */\n\t\n\t\n\t        FileItem.prototype.onError = function onError(response, status, headers) {};\n\t        /**\n\t         * Callback\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         */\n\t\n\t\n\t        FileItem.prototype.onCancel = function onCancel(response, status, headers) {};\n\t        /**\n\t         * Callback\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         */\n\t\n\t\n\t        FileItem.prototype.onComplete = function onComplete(response, status, headers) {};\n\t        /**********************\n\t         * PRIVATE\n\t         **********************/\n\t        /**\n\t         * Inner callback\n\t         */\n\t\n\t\n\t        FileItem.prototype._onBeforeUpload = function _onBeforeUpload() {\n\t            this.isReady = true;\n\t            this.isUploading = false;\n\t            this.isUploaded = false;\n\t            this.isSuccess = false;\n\t            this.isCancel = false;\n\t            this.isError = false;\n\t            this.progress = 0;\n\t            this.onBeforeUpload();\n\t        };\n\t        /**\n\t         * Inner callback\n\t         * @param {Number} progress\n\t         * @private\n\t         */\n\t\n\t\n\t        FileItem.prototype._onProgress = function _onProgress(progress) {\n\t            this.progress = progress;\n\t            this.onProgress(progress);\n\t        };\n\t        /**\n\t         * Inner callback\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         * @private\n\t         */\n\t\n\t\n\t        FileItem.prototype._onSuccess = function _onSuccess(response, status, headers) {\n\t            this.isReady = false;\n\t            this.isUploading = false;\n\t            this.isUploaded = true;\n\t            this.isSuccess = true;\n\t            this.isCancel = false;\n\t            this.isError = false;\n\t            this.progress = 100;\n\t            this.index = null;\n\t            this.onSuccess(response, status, headers);\n\t        };\n\t        /**\n\t         * Inner callback\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         * @private\n\t         */\n\t\n\t\n\t        FileItem.prototype._onError = function _onError(response, status, headers) {\n\t            this.isReady = false;\n\t            this.isUploading = false;\n\t            this.isUploaded = true;\n\t            this.isSuccess = false;\n\t            this.isCancel = false;\n\t            this.isError = true;\n\t            this.progress = 0;\n\t            this.index = null;\n\t            this.onError(response, status, headers);\n\t        };\n\t        /**\n\t         * Inner callback\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         * @private\n\t         */\n\t\n\t\n\t        FileItem.prototype._onCancel = function _onCancel(response, status, headers) {\n\t            this.isReady = false;\n\t            this.isUploading = false;\n\t            this.isUploaded = false;\n\t            this.isSuccess = false;\n\t            this.isCancel = true;\n\t            this.isError = false;\n\t            this.progress = 0;\n\t            this.index = null;\n\t            this.onCancel(response, status, headers);\n\t        };\n\t        /**\n\t         * Inner callback\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         * @private\n\t         */\n\t\n\t\n\t        FileItem.prototype._onComplete = function _onComplete(response, status, headers) {\n\t            this.onComplete(response, status, headers);\n\t            if (this.removeAfterUpload) this.remove();\n\t        };\n\t        /**\n\t         * Destroys a FileItem\n\t         */\n\t\n\t\n\t        FileItem.prototype._destroy = function _destroy() {\n\t            if (this._input) this._input.remove();\n\t            if (this._form) this._form.remove();\n\t            delete this._form;\n\t            delete this._input;\n\t        };\n\t        /**\n\t         * Prepares to uploading\n\t         * @private\n\t         */\n\t\n\t\n\t        FileItem.prototype._prepareToUploading = function _prepareToUploading() {\n\t            this.index = this.index || ++this.uploader._nextIndex;\n\t            this.isReady = true;\n\t        };\n\t        /**\n\t         * Replaces input element on his clone\n\t         * @param {JQLite|jQuery} input\n\t         * @private\n\t         */\n\t\n\t\n\t        FileItem.prototype._replaceNode = function _replaceNode(input) {\n\t            var clone = $compile(input.clone())(input.scope());\n\t            clone.prop('value', null); // FF fix\n\t            input.css('display', 'none');\n\t            input.after(clone); // remove jquery dependency\n\t        };\n\t\n\t        return FileItem;\n\t    }();\n\t}\n\t\n\t__identity.$inject = ['$compile', 'FileLikeObject'];\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = __identity;\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar _angular = angular,\n\t    extend = _angular.extend;\n\tfunction __identity() {\n\t    var FileDirective = function () {\n\t        /**\n\t         * Creates instance of {FileDirective} object\n\t         * @param {Object} options\n\t         * @param {Object} options.uploader\n\t         * @param {HTMLElement} options.element\n\t         * @param {Object} options.events\n\t         * @param {String} options.prop\n\t         * @constructor\n\t         */\n\t        function FileDirective(options) {\n\t            _classCallCheck(this, FileDirective);\n\t\n\t            extend(this, options);\n\t            this.uploader._directives[this.prop].push(this);\n\t            this._saveLinks();\n\t            this.bind();\n\t        }\n\t        /**\n\t         * Binds events handles\n\t         */\n\t\n\t\n\t        FileDirective.prototype.bind = function bind() {\n\t            for (var key in this.events) {\n\t                var prop = this.events[key];\n\t                this.element.bind(key, this[prop]);\n\t            }\n\t        };\n\t        /**\n\t         * Unbinds events handles\n\t         */\n\t\n\t\n\t        FileDirective.prototype.unbind = function unbind() {\n\t            for (var key in this.events) {\n\t                this.element.unbind(key, this.events[key]);\n\t            }\n\t        };\n\t        /**\n\t         * Destroys directive\n\t         */\n\t\n\t\n\t        FileDirective.prototype.destroy = function destroy() {\n\t            var index = this.uploader._directives[this.prop].indexOf(this);\n\t            this.uploader._directives[this.prop].splice(index, 1);\n\t            this.unbind();\n\t            // this.element = null;\n\t        };\n\t        /**\n\t         * Saves links to functions\n\t         * @private\n\t         */\n\t\n\t\n\t        FileDirective.prototype._saveLinks = function _saveLinks() {\n\t            for (var key in this.events) {\n\t                var prop = this.events[key];\n\t                this[prop] = this[prop].bind(this);\n\t            }\n\t        };\n\t\n\t        return FileDirective;\n\t    }();\n\t\n\t    /**\n\t     * Map of events\n\t     * @type {Object}\n\t     */\n\t\n\t\n\t    FileDirective.prototype.events = {};\n\t\n\t    return FileDirective;\n\t}\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = __identity;\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _angular = angular,\n\t    extend = _angular.extend;\n\tfunction __identity($compile, FileDirective) {\n\t\n\t    return function (_FileDirective) {\n\t        _inherits(FileSelect, _FileDirective);\n\t\n\t        /**\n\t         * Creates instance of {FileSelect} object\n\t         * @param {Object} options\n\t         * @constructor\n\t         */\n\t        function FileSelect(options) {\n\t            _classCallCheck(this, FileSelect);\n\t\n\t            var extendedOptions = extend(options, {\n\t                // Map of events\n\t                events: {\n\t                    $destroy: 'destroy',\n\t                    change: 'onChange'\n\t                },\n\t                // Name of property inside uploader._directive object\n\t                prop: 'select'\n\t            });\n\t\n\t            var _this = _possibleConstructorReturn(this, _FileDirective.call(this, extendedOptions));\n\t\n\t            if (!_this.uploader.isHTML5) {\n\t                _this.element.removeAttr('multiple');\n\t            }\n\t            _this.element.prop('value', null); // FF fix\n\t            return _this;\n\t        }\n\t        /**\n\t         * Returns options\n\t         * @return {Object|undefined}\n\t         */\n\t\n\t\n\t        FileSelect.prototype.getOptions = function getOptions() {};\n\t        /**\n\t         * Returns filters\n\t         * @return {Array<Function>|String|undefined}\n\t         */\n\t\n\t\n\t        FileSelect.prototype.getFilters = function getFilters() {};\n\t        /**\n\t         * If returns \"true\" then HTMLInputElement will be cleared\n\t         * @returns {Boolean}\n\t         */\n\t\n\t\n\t        FileSelect.prototype.isEmptyAfterSelection = function isEmptyAfterSelection() {\n\t            return !!this.element.attr('multiple');\n\t        };\n\t        /**\n\t         * Event handler\n\t         */\n\t\n\t\n\t        FileSelect.prototype.onChange = function onChange() {\n\t            var files = this.uploader.isHTML5 ? this.element[0].files : this.element[0];\n\t            var options = this.getOptions();\n\t            var filters = this.getFilters();\n\t\n\t            if (!this.uploader.isHTML5) this.destroy();\n\t            this.uploader.addToQueue(files, options, filters);\n\t            if (this.isEmptyAfterSelection()) {\n\t                this.element.prop('value', null);\n\t                this.element.replaceWith($compile(this.element.clone())(this.scope)); // IE fix\n\t            }\n\t        };\n\t\n\t        return FileSelect;\n\t    }(FileDirective);\n\t}\n\t\n\t__identity.$inject = ['$compile', 'FileDirective'];\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = __identity;\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar _angular = angular,\n\t    bind = _angular.bind,\n\t    isUndefined = _angular.isUndefined;\n\tfunction __identity($q) {\n\t\n\t  return function () {\n\t    /**\n\t     * @param {Array<Function>} pipes\n\t     */\n\t    function Pipeline() {\n\t      var pipes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\t\n\t      _classCallCheck(this, Pipeline);\n\t\n\t      this.pipes = pipes;\n\t    }\n\t\n\t    Pipeline.prototype.next = function next(args) {\n\t      var pipe = this.pipes.shift();\n\t      if (isUndefined(pipe)) {\n\t        this.onSuccessful.apply(this, _toConsumableArray(args));\n\t        return;\n\t      }\n\t      var err = new Error('The filter has not passed');\n\t      err.pipe = pipe;\n\t      err.args = args;\n\t      if (pipe.isAsync) {\n\t        var deferred = $q.defer();\n\t        var onFulfilled = bind(this, this.next, args);\n\t        var onRejected = bind(this, this.onThrown, err);\n\t        deferred.promise.then(onFulfilled, onRejected);\n\t        pipe.apply(undefined, _toConsumableArray(args).concat([deferred]));\n\t      } else {\n\t        var isDone = Boolean(pipe.apply(undefined, _toConsumableArray(args)));\n\t        if (isDone) {\n\t          this.next(args);\n\t        } else {\n\t          this.onThrown(err);\n\t        }\n\t      }\n\t    };\n\t\n\t    Pipeline.prototype.exec = function exec() {\n\t      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t        args[_key] = arguments[_key];\n\t      }\n\t\n\t      this.next(args);\n\t    };\n\t\n\t    Pipeline.prototype.onThrown = function onThrown(err) {};\n\t\n\t    Pipeline.prototype.onSuccessful = function onSuccessful() {};\n\t\n\t    return Pipeline;\n\t  }();\n\t}\n\t\n\t__identity.$inject = ['$q'];\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = __identity;\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _angular = angular,\n\t    extend = _angular.extend,\n\t    forEach = _angular.forEach;\n\tfunction __identity(FileDirective) {\n\t\n\t    return function (_FileDirective) {\n\t        _inherits(FileDrop, _FileDirective);\n\t\n\t        /**\n\t         * Creates instance of {FileDrop} object\n\t         * @param {Object} options\n\t         * @constructor\n\t         */\n\t        function FileDrop(options) {\n\t            _classCallCheck(this, FileDrop);\n\t\n\t            var extendedOptions = extend(options, {\n\t                // Map of events\n\t                events: {\n\t                    $destroy: 'destroy',\n\t                    drop: 'onDrop',\n\t                    dragover: 'onDragOver',\n\t                    dragleave: 'onDragLeave'\n\t                },\n\t                // Name of property inside uploader._directive object\n\t                prop: 'drop'\n\t            });\n\t\n\t            return _possibleConstructorReturn(this, _FileDirective.call(this, extendedOptions));\n\t        }\n\t        /**\n\t         * Returns options\n\t         * @return {Object|undefined}\n\t         */\n\t\n\t\n\t        FileDrop.prototype.getOptions = function getOptions() {};\n\t        /**\n\t         * Returns filters\n\t         * @return {Array<Function>|String|undefined}\n\t         */\n\t\n\t\n\t        FileDrop.prototype.getFilters = function getFilters() {};\n\t        /**\n\t         * Event handler\n\t         */\n\t\n\t\n\t        FileDrop.prototype.onDrop = function onDrop(event) {\n\t            var transfer = this._getTransfer(event);\n\t            if (!transfer) return;\n\t            var options = this.getOptions();\n\t            var filters = this.getFilters();\n\t            this._preventAndStop(event);\n\t            forEach(this.uploader._directives.over, this._removeOverClass, this);\n\t            this.uploader.addToQueue(transfer.files, options, filters);\n\t        };\n\t        /**\n\t         * Event handler\n\t         */\n\t\n\t\n\t        FileDrop.prototype.onDragOver = function onDragOver(event) {\n\t            var transfer = this._getTransfer(event);\n\t            if (!this._haveFiles(transfer.types)) return;\n\t            transfer.dropEffect = 'copy';\n\t            this._preventAndStop(event);\n\t            forEach(this.uploader._directives.over, this._addOverClass, this);\n\t        };\n\t        /**\n\t         * Event handler\n\t         */\n\t\n\t\n\t        FileDrop.prototype.onDragLeave = function onDragLeave(event) {\n\t            if (event.currentTarget === this.element[0]) return;\n\t            this._preventAndStop(event);\n\t            forEach(this.uploader._directives.over, this._removeOverClass, this);\n\t        };\n\t        /**\n\t         * Helper\n\t         */\n\t\n\t\n\t        FileDrop.prototype._getTransfer = function _getTransfer(event) {\n\t            return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer; // jQuery fix;\n\t        };\n\t        /**\n\t         * Helper\n\t         */\n\t\n\t\n\t        FileDrop.prototype._preventAndStop = function _preventAndStop(event) {\n\t            event.preventDefault();\n\t            event.stopPropagation();\n\t        };\n\t        /**\n\t         * Returns \"true\" if types contains files\n\t         * @param {Object} types\n\t         */\n\t\n\t\n\t        FileDrop.prototype._haveFiles = function _haveFiles(types) {\n\t            if (!types) return false;\n\t            if (types.indexOf) {\n\t                return types.indexOf('Files') !== -1;\n\t            } else if (types.contains) {\n\t                return types.contains('Files');\n\t            } else {\n\t                return false;\n\t            }\n\t        };\n\t        /**\n\t         * Callback\n\t         */\n\t\n\t\n\t        FileDrop.prototype._addOverClass = function _addOverClass(item) {\n\t            item.addOverClass();\n\t        };\n\t        /**\n\t         * Callback\n\t         */\n\t\n\t\n\t        FileDrop.prototype._removeOverClass = function _removeOverClass(item) {\n\t            item.removeOverClass();\n\t        };\n\t\n\t        return FileDrop;\n\t    }(FileDirective);\n\t}\n\t\n\t__identity.$inject = ['FileDirective'];\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = __identity;\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _angular = angular,\n\t    extend = _angular.extend;\n\tfunction __identity(FileDirective) {\n\t\n\t    return function (_FileDirective) {\n\t        _inherits(FileOver, _FileDirective);\n\t\n\t        /**\n\t         * Creates instance of {FileDrop} object\n\t         * @param {Object} options\n\t         * @constructor\n\t         */\n\t        function FileOver(options) {\n\t            _classCallCheck(this, FileOver);\n\t\n\t            var extendedOptions = extend(options, {\n\t                // Map of events\n\t                events: {\n\t                    $destroy: 'destroy'\n\t                },\n\t                // Name of property inside uploader._directive object\n\t                prop: 'over',\n\t                // Over class\n\t                overClass: 'nv-file-over'\n\t            });\n\t\n\t            return _possibleConstructorReturn(this, _FileDirective.call(this, extendedOptions));\n\t        }\n\t        /**\n\t         * Adds over class\n\t         */\n\t\n\t\n\t        FileOver.prototype.addOverClass = function addOverClass() {\n\t            this.element.addClass(this.getOverClass());\n\t        };\n\t        /**\n\t         * Removes over class\n\t         */\n\t\n\t\n\t        FileOver.prototype.removeOverClass = function removeOverClass() {\n\t            this.element.removeClass(this.getOverClass());\n\t        };\n\t        /**\n\t         * Returns over class\n\t         * @returns {String}\n\t         */\n\t\n\t\n\t        FileOver.prototype.getOverClass = function getOverClass() {\n\t            return this.overClass;\n\t        };\n\t\n\t        return FileOver;\n\t    }(FileDirective);\n\t}\n\t\n\t__identity.$inject = ['FileDirective'];\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = __identity;\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction __identity($parse, FileUploader, FileSelect) {\n\t\n\t    return {\n\t        link: function link(scope, element, attributes) {\n\t            var uploader = scope.$eval(attributes.uploader);\n\t\n\t            if (!(uploader instanceof FileUploader)) {\n\t                throw new TypeError('\"Uploader\" must be an instance of FileUploader');\n\t            }\n\t\n\t            var object = new FileSelect({\n\t                uploader: uploader,\n\t                element: element,\n\t                scope: scope\n\t            });\n\t\n\t            object.getOptions = $parse(attributes.options).bind(object, scope);\n\t            object.getFilters = function () {\n\t                return attributes.filters;\n\t            };\n\t        }\n\t    };\n\t}\n\t\n\t__identity.$inject = ['$parse', 'FileUploader', 'FileSelect'];\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = __identity;\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction __identity($parse, FileUploader, FileDrop) {\n\t\n\t    return {\n\t        link: function link(scope, element, attributes) {\n\t            var uploader = scope.$eval(attributes.uploader);\n\t\n\t            if (!(uploader instanceof FileUploader)) {\n\t                throw new TypeError('\"Uploader\" must be an instance of FileUploader');\n\t            }\n\t\n\t            if (!uploader.isHTML5) return;\n\t\n\t            var object = new FileDrop({\n\t                uploader: uploader,\n\t                element: element\n\t            });\n\t\n\t            object.getOptions = $parse(attributes.options).bind(object, scope);\n\t            object.getFilters = function () {\n\t                return attributes.filters;\n\t            };\n\t        }\n\t    };\n\t}\n\t\n\t__identity.$inject = ['$parse', 'FileUploader', 'FileDrop'];\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = __identity;\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction __identity(FileUploader, FileOver) {\n\t\n\t    return {\n\t        link: function link(scope, element, attributes) {\n\t            var uploader = scope.$eval(attributes.uploader);\n\t\n\t            if (!(uploader instanceof FileUploader)) {\n\t                throw new TypeError('\"Uploader\" must be an instance of FileUploader');\n\t            }\n\t\n\t            var object = new FileOver({\n\t                uploader: uploader,\n\t                element: element\n\t            });\n\t\n\t            object.getOverClass = function () {\n\t                return attributes.overClass || object.overClass;\n\t            };\n\t        }\n\t    };\n\t}\n\t\n\t__identity.$inject = ['FileUploader', 'FileOver'];\n\n/***/ })\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// angular-file-upload.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9bea877ed3a77e853152","'use strict';\n\n\nimport CONFIG from './config.json';\n\n\nimport options from './values/options'\n\n\nimport serviceFileUploader from './services/FileUploader';\nimport serviceFileLikeObject from './services/FileLikeObject';\nimport serviceFileItem from './services/FileItem';\nimport serviceFileDirective from './services/FileDirective';\nimport serviceFileSelect from './services/FileSelect';\nimport servicePipeline from './services/Pipeline';\nimport serviceFileDrop from './services/FileDrop';\nimport serviceFileOver from './services/FileOver';\n\n\nimport directiveFileSelect from './directives/FileSelect';\nimport directiveFileDrop from './directives/FileDrop';\nimport directiveFileOver from './directives/FileOver';\n\n\nangular\n    .module(CONFIG.name, [])\n    .value('fileUploaderOptions', options)\n    .factory('FileUploader', serviceFileUploader)\n    .factory('FileLikeObject', serviceFileLikeObject)\n    .factory('FileItem', serviceFileItem)\n    .factory('FileDirective', serviceFileDirective)\n    .factory('FileSelect', serviceFileSelect)\n    .factory('FileDrop', serviceFileDrop)\n    .factory('FileOver', serviceFileOver)\n    .factory('Pipeline', servicePipeline)\n    .directive('nvFileSelect', directiveFileSelect)\n    .directive('nvFileDrop', directiveFileDrop)\n    .directive('nvFileOver', directiveFileOver)\n    .run([\n        'FileUploader',\n        'FileLikeObject',\n        'FileItem',\n        'FileDirective',\n        'FileSelect',\n        'FileDrop',\n        'FileOver',\n        'Pipeline',\n        function(FileUploader, FileLikeObject, FileItem, FileDirective, FileSelect, FileDrop, FileOver, Pipeline) {\n            // only for compatibility\n            FileUploader.FileLikeObject = FileLikeObject;\n            FileUploader.FileItem = FileItem;\n            FileUploader.FileDirective = FileDirective;\n            FileUploader.FileSelect = FileSelect;\n            FileUploader.FileDrop = FileDrop;\n            FileUploader.FileOver = FileOver;\n            FileUploader.Pipeline = Pipeline;\n        }\n    ]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = {\"name\":\"angularFileUpload\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/config.json\n// module id = 1\n// module chunks = 0 1","'use strict';\n\n\nexport default {\n    url: '/',\n    alias: 'file',\n    headers: {},\n    queue: [],\n    progress: 0,\n    autoUpload: false,\n    removeAfterUpload: false,\n    method: 'POST',\n    filters: [],\n    formData: [],\n    queueLimit: Number.MAX_VALUE,\n    withCredentials: false,\n    disableMultipart: false\n};\n\n\n// WEBPACK FOOTER //\n// ./src/values/options.js","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nlet {\n    bind,\n    copy,\n    extend,\n    forEach,\n    isObject,\n    isNumber,\n    isDefined,\n    isArray,\n    isUndefined,\n    element\n    } = angular;\n\n\nexport default function __identity(fileUploaderOptions, $rootScope, $http, $window, $timeout, FileLikeObject, FileItem, Pipeline) {\n    \n    \n    let {\n        File,\n        FormData\n        } = $window;\n    \n    \n    class FileUploader {\n        /**********************\n         * PUBLIC\n         **********************/\n        /**\n         * Creates an instance of FileUploader\n         * @param {Object} [options]\n         * @constructor\n         */\n        constructor(options) {\n            var settings = copy(fileUploaderOptions);\n            \n            extend(this, settings, options, {\n                isUploading: false,\n                _nextIndex: 0,\n                _directives: {select: [], drop: [], over: []}\n            });\n\n            // add default filters\n            this.filters.unshift({name: 'queueLimit', fn: this._queueLimitFilter});\n            this.filters.unshift({name: 'folder', fn: this._folderFilter});\n        }\n        /**\n         * Adds items to the queue\n         * @param {File|HTMLInputElement|Object|FileList|Array<Object>} files\n         * @param {Object} [options]\n         * @param {Array<Function>|String} filters\n         */\n        addToQueue(files, options, filters) {\n            let incomingQueue = this.isArrayLikeObject(files) ? Array.prototype.slice.call(files): [files];\n            var arrayOfFilters = this._getFilters(filters);\n            var count = this.queue.length;\n            var addedFileItems = [];\n\n            let next = () => {\n                let something = incomingQueue.shift();\n                \n                if (isUndefined(something)) {\n                    return done();\n                }\n                \n                let fileLikeObject = (this.isFile(something)||this.isAnotherFileImplementation(something)) ? something : new FileLikeObject(something);\n                let pipes = this._convertFiltersToPipes(arrayOfFilters);\n                let pipeline = new Pipeline(pipes);\n                let onThrown = (err) => {\n                    let {originalFilter} = err.pipe;\n                    let [fileLikeObject, options] = err.args;\n                    this._onWhenAddingFileFailed(fileLikeObject, originalFilter, options);\n                    next();\n                };\n                let onSuccessful = (fileLikeObject, options) => {\n                    let fileItem = new FileItem(this, fileLikeObject, options);\n                    addedFileItems.push(fileItem);\n                    this.queue.push(fileItem);\n                    this._onAfterAddingFile(fileItem);\n                    next();\n                };\n                pipeline.onThrown = onThrown;\n                pipeline.onSuccessful = onSuccessful;\n                pipeline.exec(fileLikeObject, options);\n            };\n                \n            let done = () => {\n                if(this.queue.length !== count) {\n                    this._onAfterAddingAll(addedFileItems);\n                    this.progress = this._getTotalProgress();\n                }\n\n                this._render();\n                if (this.autoUpload) this.uploadAll();\n            };\n            \n            next();\n        }\n        /**\n         * Remove items from the queue. Remove last: index = -1\n         * @param {FileItem|Number} value\n         */\n        removeFromQueue(value) {\n            var index = this.getIndexOfItem(value);\n            var item = this.queue[index];\n            if(item.isUploading) item.cancel();\n            this.queue.splice(index, 1);\n            item._destroy();\n            this.progress = this._getTotalProgress();\n        }\n        /**\n         * Clears the queue\n         */\n        clearQueue() {\n            while(this.queue.length) {\n                this.queue[0].remove();\n            }\n            this.progress = 0;\n        }\n        /**\n         * Uploads a item from the queue\n         * @param {FileItem|Number} value\n         */\n        uploadItem(value) {\n            var index = this.getIndexOfItem(value);\n            var item = this.queue[index];\n            var transport = this.isHTML5 ? '_xhrTransport' : '_iframeTransport';\n\n            item._prepareToUploading();\n            if(this.isUploading) return;\n\n            this._onBeforeUploadItem(item);\n            if (item.isCancel) return;\n\n            item.isUploading = true;\n            this.isUploading = true;\n            this[transport](item);\n            this._render();\n        }\n        /**\n         * Cancels uploading of item from the queue\n         * @param {FileItem|Number} value\n         */\n        cancelItem(value) {\n            var index = this.getIndexOfItem(value);\n            var item = this.queue[index];\n            var prop = this.isHTML5 ? '_xhr' : '_form';\n            if (!item) return;\n            item.isCancel = true;\n            if(item.isUploading) {\n                // It will call this._onCancelItem() & this._onCompleteItem() asynchronously\n                item[prop].abort();\n            } else {\n                let dummy = [undefined, 0, {}];\n                let onNextTick = () => {\n                    this._onCancelItem(item, ...dummy);\n                    this._onCompleteItem(item, ...dummy);\n                };\n                $timeout(onNextTick); // Trigger callbacks asynchronously (setImmediate emulation)\n            }\n        }\n        /**\n         * Uploads all not uploaded items of queue\n         */\n        uploadAll() {\n            var items = this.getNotUploadedItems().filter(item => !item.isUploading);\n            if(!items.length) return;\n\n            forEach(items, item => item._prepareToUploading());\n            items[0].upload();\n        }\n        /**\n         * Cancels all uploads\n         */\n        cancelAll() {\n            var items = this.getNotUploadedItems();\n            forEach(items, item => item.cancel());\n        }\n        /**\n         * Returns \"true\" if value an instance of File\n         * @param {*} value\n         * @returns {Boolean}\n         * @private\n         */\n        isFile(value) {\n            return this.constructor.isFile(value);\n        }\n        /**\n         * Returns \"true\" if value is an instance of another File class, event if it is not the window.File class.\n         * For example, cordova uses another File definition.\n         * @param {*} value\n         * @returns {Boolean}\n         * @private\n         */\n        static isAnotherFileImplementation(value) {\n            return this.constructor.isAnotherFileImplementation(value);\n        }\n        /**\n         * Returns \"true\" if value an instance of FileLikeObject\n         * @param {*} value\n         * @returns {Boolean}\n         * @private\n         */\n        isFileLikeObject(value) {\n            return this.constructor.isFileLikeObject(value);\n        }\n        /**\n         * Returns \"true\" if value is array like object\n         * @param {*} value\n         * @returns {Boolean}\n         */\n        isArrayLikeObject(value) {\n            return this.constructor.isArrayLikeObject(value);\n        }\n        /**\n         * Returns a index of item from the queue\n         * @param {Item|Number} value\n         * @returns {Number}\n         */\n        getIndexOfItem(value) {\n            return isNumber(value) ? value : this.queue.indexOf(value);\n        }\n        /**\n         * Returns not uploaded items\n         * @returns {Array}\n         */\n        getNotUploadedItems() {\n            return this.queue.filter(item => !item.isUploaded);\n        }\n        /**\n         * Returns items ready for upload\n         * @returns {Array}\n         */\n        getReadyItems() {\n            return this.queue\n                .filter(item => (item.isReady && !item.isUploading))\n                .sort((item1, item2) => item1.index - item2.index);\n        }\n        /**\n         * Destroys instance of FileUploader\n         */\n        destroy() {\n            forEach(this._directives, (key) => {\n                forEach(this._directives[key], (object) => {\n                    object.destroy();\n                });\n            });\n        }\n        /**\n         * Callback\n         * @param {Array} fileItems\n         */\n        onAfterAddingAll(fileItems) {\n        }\n        /**\n         * Callback\n         * @param {FileItem} fileItem\n         */\n        onAfterAddingFile(fileItem) {\n        }\n        /**\n         * Callback\n         * @param {File|Object} item\n         * @param {Object} filter\n         * @param {Object} options\n         */\n        onWhenAddingFileFailed(item, filter, options) {\n        }\n        /**\n         * Callback\n         * @param {FileItem} fileItem\n         */\n        onBeforeUploadItem(fileItem) {\n        }\n        /**\n         * Callback\n         * @param {FileItem} fileItem\n         * @param {Number} progress\n         */\n        onProgressItem(fileItem, progress) {\n        }\n        /**\n         * Callback\n         * @param {Number} progress\n         */\n        onProgressAll(progress) {\n        }\n        /**\n         * Callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onSuccessItem(item, response, status, headers) {\n        }\n        /**\n         * Callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onErrorItem(item, response, status, headers) {\n        }\n        /**\n         * Callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onCancelItem(item, response, status, headers) {\n        }\n        /**\n         * Callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onCompleteItem(item, response, status, headers) {\n        }\n        /**\n         * Callback\n         */\n        onCompleteAll() {\n        }\n        /**********************\n         * PRIVATE\n         **********************/\n        /**\n         * Returns the total progress\n         * @param {Number} [value]\n         * @returns {Number}\n         * @private\n         */\n        _getTotalProgress(value) {\n            if(this.removeAfterUpload) return value || 0;\n\n            var notUploaded = this.getNotUploadedItems().length;\n            var uploaded = notUploaded ? this.queue.length - notUploaded : this.queue.length;\n            var ratio = 100 / this.queue.length;\n            var current = (value || 0) * ratio / 100;\n\n            return Math.round(uploaded * ratio + current);\n        }\n        /**\n         * Returns array of filters\n         * @param {Array<Function>|String} filters\n         * @returns {Array<Function>}\n         * @private\n         */\n        _getFilters(filters) {\n            if(!filters) return this.filters;\n            if(isArray(filters)) return filters;\n            var names = filters.match(/[^\\s,]+/g);\n            return this.filters\n                .filter(filter => names.indexOf(filter.name) !== -1);\n        }\n       /**\n       * @param {Array<Function>} filters\n       * @returns {Array<Function>}\n       * @private\n       */\n       _convertFiltersToPipes(filters) {\n            return filters\n                .map(filter => {\n                    let fn = bind(this, filter.fn);\n                    fn.isAsync = filter.fn.length === 3;\n                    fn.originalFilter = filter;\n                    return fn;\n                });\n        }\n        /**\n         * Updates html\n         * @private\n         */\n        _render() {\n            if(!$rootScope.$$phase) $rootScope.$apply();\n        }\n        /**\n         * Returns \"true\" if item is a file (not folder)\n         * @param {File|FileLikeObject} item\n         * @returns {Boolean}\n         * @private\n         */\n        _folderFilter(item) {\n            return !!(item.size || item.type);\n        }\n        /**\n         * Returns \"true\" if the limit has not been reached\n         * @returns {Boolean}\n         * @private\n         */\n        _queueLimitFilter() {\n            return this.queue.length < this.queueLimit;\n        }\n        /**\n         * Checks whether upload successful\n         * @param {Number} status\n         * @returns {Boolean}\n         * @private\n         */\n        _isSuccessCode(status) {\n            return (status >= 200 && status < 300) || status === 304;\n        }\n        /**\n         * Transforms the server response\n         * @param {*} response\n         * @param {Object} headers\n         * @returns {*}\n         * @private\n         */\n        _transformResponse(response, headers) {\n            var headersGetter = this._headersGetter(headers);\n            forEach($http.defaults.transformResponse, (transformFn) => {\n                response = transformFn(response, headersGetter);\n            });\n            return response;\n        }\n        /**\n         * Parsed response headers\n         * @param headers\n         * @returns {Object}\n         * @see https://github.com/angular/angular.js/blob/master/src/ng/http.js\n         * @private\n         */\n        _parseHeaders(headers) {\n            var parsed = {}, key, val, i;\n\n            if(!headers) return parsed;\n\n            forEach(headers.split('\\n'), (line) => {\n                i = line.indexOf(':');\n                key = line.slice(0, i).trim().toLowerCase();\n                val = line.slice(i + 1).trim();\n\n                if(key) {\n                    parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n                }\n            });\n\n            return parsed;\n        }\n        /**\n         * Returns function that returns headers\n         * @param {Object} parsedHeaders\n         * @returns {Function}\n         * @private\n         */\n        _headersGetter(parsedHeaders) {\n            return (name) => {\n                if(name) {\n                    return parsedHeaders[name.toLowerCase()] || null;\n                }\n                return parsedHeaders;\n            };\n        }\n        /**\n         * The XMLHttpRequest transport\n         * @param {FileItem} item\n         * @private\n         */\n        _xhrTransport(item) {\n            var xhr = item._xhr = new XMLHttpRequest();\n            var sendable;\n\n            if (!item.disableMultipart) {\n                sendable = new FormData();\n                forEach(item.formData, (obj) => {\n                    forEach(obj, (value, key) => {\n                        sendable.append(key, value);\n                    });\n                });\n\n                sendable.append(item.alias, item._file, item.file.name);\n            }\n            else {\n                sendable = item._file;\n            }\n\n            if(typeof(item._file.size) != 'number') {\n                throw new TypeError('The file specified is no longer valid');\n            }\n\n            xhr.upload.onprogress = (event) => {\n                var progress = Math.round(event.lengthComputable ? event.loaded * 100 / event.total : 0);\n                this._onProgressItem(item, progress);\n            };\n\n            xhr.onload = () => {\n                var headers = this._parseHeaders(xhr.getAllResponseHeaders());\n                var response = this._transformResponse(xhr.response, headers);\n                var gist = this._isSuccessCode(xhr.status) ? 'Success' : 'Error';\n                var method = '_on' + gist + 'Item';\n                this[method](item, response, xhr.status, headers);\n                this._onCompleteItem(item, response, xhr.status, headers);\n            };\n\n            xhr.onerror = () => {\n                var headers = this._parseHeaders(xhr.getAllResponseHeaders());\n                var response = this._transformResponse(xhr.response, headers);\n                this._onErrorItem(item, response, xhr.status, headers);\n                this._onCompleteItem(item, response, xhr.status, headers);\n            };\n\n            xhr.onabort = () => {\n                var headers = this._parseHeaders(xhr.getAllResponseHeaders());\n                var response = this._transformResponse(xhr.response, headers);\n                this._onCancelItem(item, response, xhr.status, headers);\n                this._onCompleteItem(item, response, xhr.status, headers);\n            };\n\n            xhr.open(item.method, item.url, true);\n\n            xhr.withCredentials = item.withCredentials;\n\n            forEach(item.headers, (value, name) => {\n                xhr.setRequestHeader(name, value);\n            });\n\n            xhr.send(sendable);\n        }\n        /**\n         * The IFrame transport\n         * @param {FileItem} item\n         * @private\n         */\n        _iframeTransport(item) {\n            var form = element('<form style=\"display: none;\" />');\n            var iframe = element('<iframe name=\"iframeTransport' + Date.now() + '\">');\n            var input = item._input;\n\n            if(item._form) item._form.replaceWith(input); // remove old form\n            item._form = form; // save link to new form\n\n            input.prop('name', item.alias);\n\n            forEach(item.formData, (obj) => {\n                forEach(obj, (value, key) => {\n                    var element_ = element('<input type=\"hidden\" name=\"' + key + '\" />');\n                    element_.val(value);\n                    form.append(element_);\n                });\n            });\n\n            form.prop({\n                action: item.url,\n                method: 'POST',\n                target: iframe.prop('name'),\n                enctype: 'multipart/form-data',\n                encoding: 'multipart/form-data' // old IE\n            });\n\n            iframe.bind('load', () => {\n                var html = '';\n                var status = 200;\n\n                try {\n                    // Fix for legacy IE browsers that loads internal error page\n                    // when failed WS response received. In consequence iframe\n                    // content access denied error is thrown becouse trying to\n                    // access cross domain page. When such thing occurs notifying\n                    // with empty response object. See more info at:\n                    // http://stackoverflow.com/questions/151362/access-is-denied-error-on-accessing-iframe-document-object\n                    // Note that if non standard 4xx or 5xx error code returned\n                    // from WS then response content can be accessed without error\n                    // but 'XHR' status becomes 200. In order to avoid confusion\n                    // returning response via same 'success' event handler.\n\n                    // fixed angular.contents() for iframes\n                    html = iframe[0].contentDocument.body.innerHTML;\n                } catch(e) {\n                    // in case we run into the access-is-denied error or we have another error on the server side\n                    // (intentional 500,40... errors), we at least say 'something went wrong' -> 500\n                    status = 500;\n                }\n\n                var xhr = {response: html, status: status, dummy: true};\n                var headers = {};\n                var response = this._transformResponse(xhr.response, headers);\n\n                this._onSuccessItem(item, response, xhr.status, headers);\n                this._onCompleteItem(item, response, xhr.status, headers);\n            });\n\n            form.abort = () => {\n                var xhr = {status: 0, dummy: true};\n                var headers = {};\n                var response;\n\n                iframe.unbind('load').prop('src', 'javascript:false;');\n                form.replaceWith(input);\n\n                this._onCancelItem(item, response, xhr.status, headers);\n                this._onCompleteItem(item, response, xhr.status, headers);\n            };\n\n            input.after(form);\n            form.append(input).append(iframe);\n\n            form[0].submit();\n        }\n        /**\n         * Inner callback\n         * @param {File|Object} item\n         * @param {Object} filter\n         * @param {Object} options\n         * @private\n         */\n        _onWhenAddingFileFailed(item, filter, options) {\n            this.onWhenAddingFileFailed(item, filter, options);\n        }\n        /**\n         * Inner callback\n         * @param {FileItem} item\n         */\n        _onAfterAddingFile(item) {\n            this.onAfterAddingFile(item);\n        }\n        /**\n         * Inner callback\n         * @param {Array<FileItem>} items\n         */\n        _onAfterAddingAll(items) {\n            this.onAfterAddingAll(items);\n        }\n        /**\n         *  Inner callback\n         * @param {FileItem} item\n         * @private\n         */\n        _onBeforeUploadItem(item) {\n            item._onBeforeUpload();\n            this.onBeforeUploadItem(item);\n        }\n        /**\n         * Inner callback\n         * @param {FileItem} item\n         * @param {Number} progress\n         * @private\n         */\n        _onProgressItem(item, progress) {\n            var total = this._getTotalProgress(progress);\n            this.progress = total;\n            item._onProgress(progress);\n            this.onProgressItem(item, progress);\n            this.onProgressAll(total);\n            this._render();\n        }\n        /**\n         * Inner callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onSuccessItem(item, response, status, headers) {\n            item._onSuccess(response, status, headers);\n            this.onSuccessItem(item, response, status, headers);\n        }\n        /**\n         * Inner callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onErrorItem(item, response, status, headers) {\n            item._onError(response, status, headers);\n            this.onErrorItem(item, response, status, headers);\n        }\n        /**\n         * Inner callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onCancelItem(item, response, status, headers) {\n            item._onCancel(response, status, headers);\n            this.onCancelItem(item, response, status, headers);\n        }\n        /**\n         * Inner callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onCompleteItem(item, response, status, headers) {\n            item._onComplete(response, status, headers);\n            this.onCompleteItem(item, response, status, headers);\n\n            var nextItem = this.getReadyItems()[0];\n            this.isUploading = false;\n\n            if(isDefined(nextItem)) {\n                nextItem.upload();\n                return;\n            }\n\n            this.onCompleteAll();\n            this.progress = this._getTotalProgress();\n            this._render();\n        }\n        /**********************\n         * STATIC\n         **********************/\n        /**\n         * Returns \"true\" if value an instance of File\n         * @param {*} value\n         * @returns {Boolean}\n         * @private\n         */\n        static isFile(value) {\n            return (File && value instanceof File)||((value.constructor && value.constructor.name == 'File'));\n        }\n        /**\n         * Returns \"true\" if value an instance of another File class, event if it is not the window.File class.\n         * For example, cordova uses another File definition.\n         * @param {*} value\n         * @returns {Boolean}\n         * @private\n         */\n        static isAnotherFileImplementation(value) {\n            return (value.constructor && value.constructor.name == 'File');\n        }\n        /**\n         * Returns \"true\" if value an instance of FileLikeObject\n         * @param {*} value\n         * @returns {Boolean}\n         * @private\n         */\n        static isFileLikeObject(value) {\n            return value instanceof FileLikeObject;\n        }\n        /**\n         * Returns \"true\" if value is array like object\n         * @param {*} value\n         * @returns {Boolean}\n         */\n        static isArrayLikeObject(value) {\n            return (isObject(value) && 'length' in value);\n        }\n        /**\n         * Inherits a target (Class_1) by a source (Class_2)\n         * @param {Function} target\n         * @param {Function} source\n         */\n        static inherit(target, source) {\n            target.prototype = Object.create(source.prototype);\n            target.prototype.constructor = target;\n            target.super_ = source;\n        }\n    }\n\n\n    /**********************\n     * PUBLIC\n     **********************/\n    /**\n     * Checks a support the html5 uploader\n     * @returns {Boolean}\n     * @readonly\n     */\n    FileUploader.prototype.isHTML5 = !!(File && FormData);\n    /**********************\n     * STATIC\n     **********************/\n    /**\n     * @borrows FileUploader.prototype.isHTML5\n     */\n    FileUploader.isHTML5 = FileUploader.prototype.isHTML5;\n\n    \n    return FileUploader;\n}\n\n\n__identity.$inject = [\n    'fileUploaderOptions', \n    '$rootScope', \n    '$http', \n    '$window',\n    '$timeout',\n    'FileLikeObject',\n    'FileItem',\n    'Pipeline'\n];\n\n\n// WEBPACK FOOTER //\n// ./src/services/FileUploader.js","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nlet {\n    copy,\n    isElement,\n    isString\n    } = angular;\n\n\nexport default function __identity() {\n    \n    \n    return class FileLikeObject {\n        /**\n         * Creates an instance of FileLikeObject\n         * @param {File|HTMLInputElement|Object} fileOrInput\n         * @constructor\n         */\n        constructor(fileOrInput) {\n            var isInput = isElement(fileOrInput);\n            var fakePathOrObject = isInput ? fileOrInput.value : fileOrInput;\n            var postfix = isString(fakePathOrObject) ? 'FakePath' : 'Object';\n            var method = '_createFrom' + postfix;\n            this[method](fakePathOrObject);\n        }\n        /**\n         * Creates file like object from fake path string\n         * @param {String} path\n         * @private\n         */\n        _createFromFakePath(path) {\n            this.lastModifiedDate = null;\n            this.size = null;\n            this.type = 'like/' + path.slice(path.lastIndexOf('.') + 1).toLowerCase();\n            this.name = path.slice(path.lastIndexOf('/') + path.lastIndexOf('\\\\') + 2);\n        }\n        /**\n         * Creates file like object from object\n         * @param {File|FileLikeObject} object\n         * @private\n         */\n        _createFromObject(object) {\n            this.lastModifiedDate = copy(object.lastModifiedDate);\n            this.size = object.size;\n            this.type = object.type;\n            this.name = object.name;\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/FileLikeObject.js","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nlet {\n    copy,\n    extend,\n    element,\n    isElement\n    } = angular;\n\n\nexport default function __identity($compile, FileLikeObject) {\n    \n    \n    return class FileItem {\n        /**\n         * Creates an instance of FileItem\n         * @param {FileUploader} uploader\n         * @param {File|HTMLInputElement|Object} some\n         * @param {Object} options\n         * @constructor\n         */\n        constructor(uploader, some, options) {\n            var isInput = isElement(some);\n            var input = isInput ? element(some) : null;\n            var file = !isInput ? some : null;\n\n            extend(this, {\n                url: uploader.url,\n                alias: uploader.alias,\n                headers: copy(uploader.headers),\n                formData: copy(uploader.formData),\n                removeAfterUpload: uploader.removeAfterUpload,\n                withCredentials: uploader.withCredentials,\n                disableMultipart: uploader.disableMultipart,\n                method: uploader.method\n            }, options, {\n                uploader: uploader,\n                file: new FileLikeObject(some),\n                isReady: false,\n                isUploading: false,\n                isUploaded: false,\n                isSuccess: false,\n                isCancel: false,\n                isError: false,\n                progress: 0,\n                index: null,\n                _file: file,\n                _input: input\n            });\n\n            if (input) this._replaceNode(input);\n        }\n        /**********************\n         * PUBLIC\n         **********************/\n        /**\n         * Uploads a FileItem\n         */\n        upload() {\n            try {\n                this.uploader.uploadItem(this);\n            } catch(e) {\n                var message = e.name + ':' + e.message;\n                this.uploader._onCompleteItem(this, message, e.code, []);\n                this.uploader._onErrorItem(this, message, e.code, []);\n            }\n        }\n        /**\n         * Cancels uploading of FileItem\n         */\n        cancel() {\n            this.uploader.cancelItem(this);\n        }\n        /**\n         * Removes a FileItem\n         */\n        remove() {\n            this.uploader.removeFromQueue(this);\n        }\n        /**\n         * Callback\n         * @private\n         */\n        onBeforeUpload() {\n        }\n        /**\n         * Callback\n         * @param {Number} progress\n         * @private\n         */\n        onProgress(progress) {\n        }\n        /**\n         * Callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onSuccess(response, status, headers) {\n        }\n        /**\n         * Callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onError(response, status, headers) {\n        }\n        /**\n         * Callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onCancel(response, status, headers) {\n        }\n        /**\n         * Callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onComplete(response, status, headers) {\n        }\n        /**********************\n         * PRIVATE\n         **********************/\n        /**\n         * Inner callback\n         */\n        _onBeforeUpload() {\n            this.isReady = true;\n            this.isUploading = false;\n            this.isUploaded = false;\n            this.isSuccess = false;\n            this.isCancel = false;\n            this.isError = false;\n            this.progress = 0;\n            this.onBeforeUpload();\n        }\n        /**\n         * Inner callback\n         * @param {Number} progress\n         * @private\n         */\n        _onProgress(progress) {\n            this.progress = progress;\n            this.onProgress(progress);\n        }\n        /**\n         * Inner callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onSuccess(response, status, headers) {\n            this.isReady = false;\n            this.isUploading = false;\n            this.isUploaded = true;\n            this.isSuccess = true;\n            this.isCancel = false;\n            this.isError = false;\n            this.progress = 100;\n            this.index = null;\n            this.onSuccess(response, status, headers);\n        }\n        /**\n         * Inner callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onError(response, status, headers) {\n            this.isReady = false;\n            this.isUploading = false;\n            this.isUploaded = true;\n            this.isSuccess = false;\n            this.isCancel = false;\n            this.isError = true;\n            this.progress = 0;\n            this.index = null;\n            this.onError(response, status, headers);\n        }\n        /**\n         * Inner callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onCancel(response, status, headers) {\n            this.isReady = false;\n            this.isUploading = false;\n            this.isUploaded = false;\n            this.isSuccess = false;\n            this.isCancel = true;\n            this.isError = false;\n            this.progress = 0;\n            this.index = null;\n            this.onCancel(response, status, headers);\n        }\n        /**\n         * Inner callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onComplete(response, status, headers) {\n            this.onComplete(response, status, headers);\n            if(this.removeAfterUpload) this.remove();\n        }\n        /**\n         * Destroys a FileItem\n         */\n        _destroy() {\n            if(this._input) this._input.remove();\n            if(this._form) this._form.remove();\n            delete this._form;\n            delete this._input;\n        }\n        /**\n         * Prepares to uploading\n         * @private\n         */\n        _prepareToUploading() {\n            this.index = this.index || ++this.uploader._nextIndex;\n            this.isReady = true;\n        }\n        /**\n         * Replaces input element on his clone\n         * @param {JQLite|jQuery} input\n         * @private\n         */\n        _replaceNode(input) {\n            var clone = $compile(input.clone())(input.scope());\n            clone.prop('value', null); // FF fix\n            input.css('display', 'none');\n            input.after(clone); // remove jquery dependency\n        }\n    }\n}\n\n\n__identity.$inject = [\n    '$compile',\n    'FileLikeObject'\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/FileItem.js","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nlet {\n    extend\n    } = angular;\n\n\nexport default function __identity() {\n\n\n    class FileDirective {\n        /**\n         * Creates instance of {FileDirective} object\n         * @param {Object} options\n         * @param {Object} options.uploader\n         * @param {HTMLElement} options.element\n         * @param {Object} options.events\n         * @param {String} options.prop\n         * @constructor\n         */\n        constructor(options) {\n            extend(this, options);\n            this.uploader._directives[this.prop].push(this);\n            this._saveLinks();\n            this.bind();\n        }\n        /**\n         * Binds events handles\n         */\n        bind() {\n            for(var key in this.events) {\n                var prop = this.events[key];\n                this.element.bind(key, this[prop]);\n            }\n        }\n        /**\n         * Unbinds events handles\n         */\n        unbind() {\n            for(var key in this.events) {\n                this.element.unbind(key, this.events[key]);\n            }\n        }\n        /**\n         * Destroys directive\n         */\n        destroy() {\n            var index = this.uploader._directives[this.prop].indexOf(this);\n            this.uploader._directives[this.prop].splice(index, 1);\n            this.unbind();\n            // this.element = null;\n        }\n        /**\n         * Saves links to functions\n         * @private\n         */\n        _saveLinks() {\n            for(var key in this.events) {\n                var prop = this.events[key];\n                this[prop] = this[prop].bind(this);\n            }\n        }\n    }\n\n\n    /**\n     * Map of events\n     * @type {Object}\n     */\n    FileDirective.prototype.events = {};\n\n\n    return FileDirective;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/FileDirective.js","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nlet {\n    extend\n    } = angular;\n\n\nexport default function __identity($compile, FileDirective) {\n    \n    \n    return class FileSelect extends FileDirective {\n        /**\n         * Creates instance of {FileSelect} object\n         * @param {Object} options\n         * @constructor\n         */\n        constructor(options) {\n            let extendedOptions = extend(options, {\n                // Map of events\n                events: {\n                    $destroy: 'destroy',\n                    change: 'onChange'\n                },\n                // Name of property inside uploader._directive object\n                prop: 'select'\n            });\n            \n            super(extendedOptions);\n            \n            if(!this.uploader.isHTML5) {\n                this.element.removeAttr('multiple');\n            }\n            this.element.prop('value', null); // FF fix\n        }\n        /**\n         * Returns options\n         * @return {Object|undefined}\n         */\n        getOptions() {\n        }\n        /**\n         * Returns filters\n         * @return {Array<Function>|String|undefined}\n         */\n        getFilters() {\n        }\n        /**\n         * If returns \"true\" then HTMLInputElement will be cleared\n         * @returns {Boolean}\n         */\n        isEmptyAfterSelection() {\n            return !!this.element.attr('multiple');\n        }\n        /**\n         * Event handler\n         */\n        onChange() {\n            var files = this.uploader.isHTML5 ? this.element[0].files : this.element[0];\n            var options = this.getOptions();\n            var filters = this.getFilters();\n\n            if(!this.uploader.isHTML5) this.destroy();\n            this.uploader.addToQueue(files, options, filters);\n            if(this.isEmptyAfterSelection()) {\n                this.element.prop('value', null);\n                this.element.replaceWith($compile(this.element.clone())(this.scope)); // IE fix\n            }\n        }\n    }\n}\n\n\n__identity.$inject = [\n    '$compile',\n    'FileDirective'\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/FileSelect.js","'use strict';\n\n\nconst {\n  bind,\n  isUndefined\n} = angular;\n\n\nexport default function __identity($q) {\n\n\n  return class Pipeline {\n    /**\n     * @param {Array<Function>} pipes\n     */\n    constructor(pipes = []) {\n      this.pipes = pipes;\n    }\n    next(args) {\n      let pipe = this.pipes.shift();\n      if (isUndefined(pipe)) {\n        this.onSuccessful(...args);\n        return;\n      }\n      let err = new Error('The filter has not passed');\n      err.pipe = pipe;\n      err.args = args;\n      if (pipe.isAsync) {\n        let deferred = $q.defer();\n        let onFulfilled = bind(this, this.next, args);\n        let onRejected = bind(this, this.onThrown, err);\n        deferred.promise.then(onFulfilled, onRejected);\n        pipe(...args, deferred);\n      } else {\n        let isDone = Boolean(pipe(...args));\n        if (isDone) {\n          this.next(args);\n        } else {\n          this.onThrown(err);\n        }\n      }\n    }\n    exec(...args) {\n      this.next(args);\n    }\n    onThrown(err) {\n\n    }\n    onSuccessful(...args) {\n\n    }\n  }\n  \n}\n\n__identity.$inject = [\n  '$q'\n];\n\n\n// WEBPACK FOOTER //\n// ./src/services/Pipeline.js","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nlet {\n    extend,\n    forEach\n    } = angular;\n\n\nexport default function __identity(FileDirective) {\n    \n    \n    return class FileDrop extends FileDirective {\n        /**\n         * Creates instance of {FileDrop} object\n         * @param {Object} options\n         * @constructor\n         */\n        constructor(options) {\n            let extendedOptions = extend(options, {\n                // Map of events\n                events: {\n                    $destroy: 'destroy',\n                    drop: 'onDrop',\n                    dragover: 'onDragOver',\n                    dragleave: 'onDragLeave'\n                },\n                // Name of property inside uploader._directive object\n                prop: 'drop'\n            });\n            \n            super(extendedOptions);\n        }\n        /**\n         * Returns options\n         * @return {Object|undefined}\n         */\n        getOptions() {\n        }\n        /**\n         * Returns filters\n         * @return {Array<Function>|String|undefined}\n         */\n        getFilters() {\n        }\n        /**\n         * Event handler\n         */\n        onDrop(event) {\n            var transfer = this._getTransfer(event);\n            if(!transfer) return;\n            var options = this.getOptions();\n            var filters = this.getFilters();\n            this._preventAndStop(event);\n            forEach(this.uploader._directives.over, this._removeOverClass, this);\n            this.uploader.addToQueue(transfer.files, options, filters);\n        }\n        /**\n         * Event handler\n         */\n        onDragOver(event) {\n            var transfer = this._getTransfer(event);\n            if(!this._haveFiles(transfer.types)) return;\n            transfer.dropEffect = 'copy';\n            this._preventAndStop(event);\n            forEach(this.uploader._directives.over, this._addOverClass, this);\n        }\n        /**\n         * Event handler\n         */\n        onDragLeave(event) {\n            if(event.currentTarget === this.element[0]) return;\n            this._preventAndStop(event);\n            forEach(this.uploader._directives.over, this._removeOverClass, this);\n        }\n        /**\n         * Helper\n         */\n        _getTransfer(event) {\n            return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer; // jQuery fix;\n        }\n        /**\n         * Helper\n         */\n        _preventAndStop(event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        /**\n         * Returns \"true\" if types contains files\n         * @param {Object} types\n         */\n        _haveFiles(types) {\n            if(!types) return false;\n            if(types.indexOf) {\n                return types.indexOf('Files') !== -1;\n            } else if(types.contains) {\n                return types.contains('Files');\n            } else {\n                return false;\n            }\n        }\n        /**\n         * Callback\n         */\n        _addOverClass(item) {\n            item.addOverClass();\n        }\n        /**\n         * Callback\n         */\n        _removeOverClass(item) {\n            item.removeOverClass();\n        }\n    }\n}\n\n\n__identity.$inject = [\n    'FileDirective'\n];\n\n\n// WEBPACK FOOTER //\n// ./src/services/FileDrop.js","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nlet {\n    extend\n    } = angular;\n\n\nexport default function __identity(FileDirective) {\n    \n    \n    return class FileOver extends FileDirective {\n        /**\n         * Creates instance of {FileDrop} object\n         * @param {Object} options\n         * @constructor\n         */\n        constructor(options) {\n            let extendedOptions = extend(options, {\n                // Map of events\n                events: {\n                    $destroy: 'destroy'\n                },\n                // Name of property inside uploader._directive object\n                prop: 'over',\n                // Over class\n                overClass: 'nv-file-over'\n            });\n            \n            super(extendedOptions);\n        }\n        /**\n         * Adds over class\n         */\n        addOverClass() {\n            this.element.addClass(this.getOverClass());\n        }\n        /**\n         * Removes over class\n         */\n        removeOverClass() {\n            this.element.removeClass(this.getOverClass());\n        }\n        /**\n         * Returns over class\n         * @returns {String}\n         */\n        getOverClass() {\n            return this.overClass;\n        }\n    }\n}\n\n\n__identity.$inject = [\n    'FileDirective'\n];\n\n\n// WEBPACK FOOTER //\n// ./src/services/FileOver.js","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nexport default function __identity($parse, FileUploader, FileSelect) {\n\n\n    return {\n        link: (scope, element, attributes) => {\n            var uploader = scope.$eval(attributes.uploader);\n\n            if (!(uploader instanceof FileUploader)) {\n                throw new TypeError('\"Uploader\" must be an instance of FileUploader');\n            }\n\n            var object = new FileSelect({\n                uploader: uploader,\n                element: element,\n                scope: scope\n            });\n\n            object.getOptions = $parse(attributes.options).bind(object, scope);\n            object.getFilters = () => attributes.filters;\n        }\n    };\n\n\n}\n\n\n__identity.$inject = [\n    '$parse',\n    'FileUploader',\n    'FileSelect'\n];\n\n\n// WEBPACK FOOTER //\n// ./src/directives/FileSelect.js","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nexport default function __identity($parse, FileUploader, FileDrop) {\n\n\n    return {\n        link: (scope, element, attributes) => {\n            var uploader = scope.$eval(attributes.uploader);\n\n            if (!(uploader instanceof FileUploader)) {\n                throw new TypeError('\"Uploader\" must be an instance of FileUploader');\n            }\n\n            if (!uploader.isHTML5) return;\n\n            var object = new FileDrop({\n                uploader: uploader,\n                element: element\n            });\n\n            object.getOptions = $parse(attributes.options).bind(object, scope);\n            object.getFilters = () => attributes.filters;\n        }\n    };\n\n\n}\n\n\n__identity.$inject = [\n    '$parse',\n    'FileUploader',\n    'FileDrop'\n];\n\n\n// WEBPACK FOOTER //\n// ./src/directives/FileDrop.js","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nexport default function __identity(FileUploader, FileOver) {\n\n\n    return {\n        link: (scope, element, attributes) => {\n            var uploader = scope.$eval(attributes.uploader);\n\n            if (!(uploader instanceof FileUploader)) {\n                throw new TypeError('\"Uploader\" must be an instance of FileUploader');\n            }\n\n            var object = new FileOver({\n                uploader: uploader,\n                element: element\n            });\n\n            object.getOverClass = () => attributes.overClass || object.overClass;\n        }\n    };\n\n\n}\n\n\n__identity.$inject = [\n    'FileUploader',\n    'FileOver'\n];\n\n\n// WEBPACK FOOTER //\n// ./src/directives/FileOver.js"],"sourceRoot":""}